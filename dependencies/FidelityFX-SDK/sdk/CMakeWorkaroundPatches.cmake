set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

set(SYMBOL_COLLISION_WORKAROUND_TARGET_NAME "<ERROR>")

if(FFX_API_BACKEND STREQUAL "DX12_X64")
	set(SYMBOL_COLLISION_WORKAROUND_TARGET_NAME "12")
elseif(FFX_API_BACKEND STREQUAL "VK_X64")
	set(SYMBOL_COLLISION_WORKAROUND_TARGET_NAME "VK")
endif()

function(fixup_symbol SYM_NAME)
	add_compile_definitions("${SYM_NAME}=${SYM_NAME}_${SYMBOL_COLLISION_WORKAROUND_TARGET_NAME}")
endfunction()


fixup_symbol(ffxWaitForPresents) # FrameInterpolationSwapchainXX.obj
fixup_symbol(interpolationThread) # FrameInterpolationSwapchainXX.obj
fixup_symbol(waitForPerformanceCount) # FrameInterpolationSwapchainXX_Helpers.obj

fixup_symbol(ffxIsWave64)
fixup_symbol(fsr3UpscalerIsWave64)
fixup_symbol(frameInterpolationIsWave64)
fixup_symbol(opticalflowIsWave64)

fixup_symbol(ffxGetPermutationBlobByIndex)

fixup_symbol(FrameInterpolationGetComputeGameVectorFieldInpaintingPyramidPassPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetComputeInpaintingPyramidPassPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetDebugViewPassPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetDisocclusionMaskPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetFiPassPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetGameMotionVectorFieldPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetInpaintingPassPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetOpticalFlowVectorFieldPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetReconstructAndDilatePermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetReconstructPrevDepthPermutationBlobByIndex)
fixup_symbol(FrameInterpolationGetSetupPermutationBlobByIndex)
fixup_symbol(frameInterpolationGetPermutationBlobByIndex)

fixup_symbol(fsr3UpscalerGetAccumulatePassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetAutogenReactivePassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetDebugViewPassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetLumaInstabilityPassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetLumaPyramidPassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetPrepareInputsPassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetPrepareReactivityPassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetRCASPassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetShadingChangePassPermutationBlobByIndex)
fixup_symbol(fsr3UpscalerGetShadingChangePyramidPassPermutationBlobByIndex)

fixup_symbol(opticalflowGetComputeLuminancePyramidPassPermutationBlobByIndex)
fixup_symbol(opticalflowGetComputeOpticalFlowAdvancedPassV5PermutationBlobByIndex)
fixup_symbol(opticalflowGetComputeScdDivergencePassPermutationBlobByIndex)
fixup_symbol(opticalflowGetFilterOpticalFlowPassV5PermutationBlobByIndex)
fixup_symbol(opticalflowGetGenerateScdHistogramPassPermutationBlobByIndex)
fixup_symbol(opticalflowGetPermutationBlobByIndex)
fixup_symbol(opticalflowGetPrepareLumaPassPermutationBlobByIndex)
fixup_symbol(opticalflowGetScaleOpticalFlowAdvancedPassV5PermutationBlobByIndex)


unset(fixup_symbol)
unset(SYMBOL_COLLISION_WORKAROUND_TARGET_NAME)